//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.06.19 at 04:51:40 GMT+04:00 
//


package org.digijava.module.ampharvester.jaxb10.impl;

public class FundingTypeImpl implements org.digijava.module.ampharvester.jaxb10.FundingType, com.sun.xml.bind.JAXBObject, org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallableObject, org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializable, org.digijava.module.ampharvester.jaxb10.impl.runtime.ValidatableObject
{

    protected org.digijava.module.ampharvester.jaxb10.CodeValueType _Assistance;
    protected org.digijava.module.ampharvester.jaxb10.CodeValueType _FinancingInstrument;
    protected com.sun.xml.bind.util.ListImpl _Commitment;
    protected java.lang.String _FinancingId;
    protected com.sun.xml.bind.util.ListImpl _Expenditure;
    protected org.digijava.module.ampharvester.jaxb10.FreeTextType _Condition;
    protected com.sun.xml.bind.util.ListImpl _Disbursement;
    public final static java.lang.Class version = (org.digijava.module.ampharvester.jaxb10.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.digijava.module.ampharvester.jaxb10.FundingType.class);
    }

    public org.digijava.module.ampharvester.jaxb10.CodeValueType getAssistance() {
        return _Assistance;
    }

    public void setAssistance(org.digijava.module.ampharvester.jaxb10.CodeValueType value) {
        _Assistance = value;
    }

    public org.digijava.module.ampharvester.jaxb10.CodeValueType getFinancingInstrument() {
        return _FinancingInstrument;
    }

    public void setFinancingInstrument(org.digijava.module.ampharvester.jaxb10.CodeValueType value) {
        _FinancingInstrument = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getCommitment() {
        if (_Commitment == null) {
            _Commitment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Commitment;
    }

    public java.util.List getCommitment() {
        return _getCommitment();
    }

    public java.lang.String getFinancingId() {
        return _FinancingId;
    }

    public void setFinancingId(java.lang.String value) {
        _FinancingId = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getExpenditure() {
        if (_Expenditure == null) {
            _Expenditure = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Expenditure;
    }

    public java.util.List getExpenditure() {
        return _getExpenditure();
    }

    public org.digijava.module.ampharvester.jaxb10.FreeTextType getCondition() {
        return _Condition;
    }

    public void setCondition(org.digijava.module.ampharvester.jaxb10.FreeTextType value) {
        _Condition = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getDisbursement() {
        if (_Disbursement == null) {
            _Disbursement = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Disbursement;
    }

    public java.util.List getDisbursement() {
        return _getDisbursement();
    }

    public org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingContext context) {
        return new org.digijava.module.ampharvester.jaxb10.impl.FundingTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Commitment == null)? 0 :_Commitment.size());
        int idx5 = 0;
        final int len5 = ((_Expenditure == null)? 0 :_Expenditure.size());
        int idx7 = 0;
        final int len7 = ((_Disbursement == null)? 0 :_Disbursement.size());
        context.startElement("", "assistance");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Assistance), "Assistance");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Assistance), "Assistance");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Assistance), "Assistance");
        context.endElement();
        if (_FinancingInstrument!= null) {
            context.startElement("", "financingInstrument");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FinancingInstrument), "FinancingInstrument");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FinancingInstrument), "FinancingInstrument");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _FinancingInstrument), "FinancingInstrument");
            context.endElement();
        }
        if (_Condition!= null) {
            context.startElement("", "condition");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Condition), "Condition");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Condition), "Condition");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Condition), "Condition");
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("", "commitment");
            int idx_6 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Commitment.get(idx_6 ++)), "Commitment");
            context.endNamespaceDecls();
            int idx_7 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Commitment.get(idx_7 ++)), "Commitment");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Commitment.get(idx3 ++)), "Commitment");
            context.endElement();
        }
        while (idx7 != len7) {
            context.startElement("", "disbursement");
            int idx_8 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Disbursement.get(idx_8 ++)), "Disbursement");
            context.endNamespaceDecls();
            int idx_9 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Disbursement.get(idx_9 ++)), "Disbursement");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Disbursement.get(idx7 ++)), "Disbursement");
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("", "expenditure");
            int idx_10 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expenditure.get(idx_10 ++)), "Expenditure");
            context.endNamespaceDecls();
            int idx_11 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expenditure.get(idx_11 ++)), "Expenditure");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expenditure.get(idx5 ++)), "Expenditure");
            context.endElement();
        }
    }

    public void serializeAttributes(org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Commitment == null)? 0 :_Commitment.size());
        int idx5 = 0;
        final int len5 = ((_Expenditure == null)? 0 :_Expenditure.size());
        int idx7 = 0;
        final int len7 = ((_Disbursement == null)? 0 :_Disbursement.size());
        context.startAttribute("", "financingId");
        try {
            context.text(((java.lang.String) _FinancingId), "FinancingId");
        } catch (java.lang.Exception e) {
            org.digijava.module.ampharvester.jaxb10.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public void serializeURIs(org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_Commitment == null)? 0 :_Commitment.size());
        int idx5 = 0;
        final int len5 = ((_Expenditure == null)? 0 :_Expenditure.size());
        int idx7 = 0;
        final int len7 = ((_Disbursement == null)? 0 :_Disbursement.size());
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.digijava.module.ampharvester.jaxb10.FundingType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sr\u0000\u001dcom.sun.msv.gram"
+"mar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneO"
+"rMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuex"
+"p\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"
+"\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Expres"
+"sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0016\u0001psr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cpsr\u0000#com.sun.msv.grammar"
+".SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;"
+"L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u00005org.digijava.module.ampharveste"
+"r.jaxb10.CodeValueTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-"
+"elementssq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000"
+"~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.su"
+"n.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datat"
+"ype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype"
+".xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSD"
+"atatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000"
+"\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;"
+"xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http://w"
+"ww.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\nassistancet\u0000\u0000"
+"sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000%q\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017"
+"pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0013financingInstrumentq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0011"
+"ppsq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004org.digijava.module.ampharvester"
+".jaxb10.FreeTextTypeq\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!"
+"sq\u0000~\u0000\"t\u0000\tconditionq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u000bq\u0000~\u0000\u0017p"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001f"
+"q\u0000~\u0000!sq\u0000~\u0000\"t\u00009org.digijava.module.ampharvester.jaxb10.Fundin"
+"gDetailTypeq\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\n"
+"commitmentq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"q\u0000~\u0000dq\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\fdis"
+"bursementq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"q\u0000~\u0000dq\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u000bexpe"
+"nditureq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0018ppsq\u0000~\u0000)ppsr\u0000#com.sun.msv.datatype.xs"
+"d.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000.q\u0000~\u00003t\u0000\u0006strings"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006\u0001q\u0000~\u00009sq\u0000~\u0000:q\u0000~\u0000\u0087q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u000bfinancingIdq\u0000~\u0000A"
+"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTable"
+"t\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com."
+"sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005count"
+"B\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionP"
+"ool;xp\u0000\u0000\u0000&\u0001pq\u0000~\u0000\u0007q\u0000~\u0000\'q\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000eq\u0000~\u0000rq\u0000~\u0000\u007fq\u0000~\u0000\u0005q\u0000~\u0000\tq\u0000~"
+"\u0000\u0006q\u0000~\u0000\u000fq\u0000~\u0000Dq\u0000~\u0000Pq\u0000~\u0000^q\u0000~\u0000lq\u0000~\u0000yq\u0000~\u0000\bq\u0000~\u0000Bq\u0000~\u0000Nq\u0000~\u0000\u0012q\u0000~\u0000Fq\u0000~"
+"\u0000Rq\u0000~\u0000`q\u0000~\u0000nq\u0000~\u0000{q\u0000~\u0000[q\u0000~\u0000iq\u0000~\u0000vq\u0000~\u0000\nq\u0000~\u0000\\q\u0000~\u0000jq\u0000~\u0000\u0015q\u0000~\u0000Gq\u0000~"
+"\u0000Sq\u0000~\u0000aq\u0000~\u0000oq\u0000~\u0000|q\u0000~\u0000wx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.digijava.module.ampharvester.jaxb10.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------");
        }

        protected Unmarshaller(org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.digijava.module.ampharvester.jaxb10.impl.FundingTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("assistance" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("commitment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("condition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  21 :
                        if (("expenditure" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  19 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("financingInstrument" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  15 :
                        if (("commitment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("disbursement" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  18 :
                        if (("disbursement" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("expenditure" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "language");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "financingId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FinancingId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        state = 15;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        if (("disbursement" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("financingInstrument" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("expenditure" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  14 :
                        if (("commitment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("assistance" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "language");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        if (("condition" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "financingId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        state = 15;
                        continue outer;
                    case  4 :
                        if (("code" == ___local)&&("" == ___uri)) {
                            _Assistance = ((org.digijava.module.ampharvester.jaxb10.impl.CodeValueTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.CodeValueTypeImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        if (("adjustmentType" == ___local)&&("" == ___uri)) {
                            _getExpenditure().add(((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl.class), 20, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  13 :
                        if (("adjustmentType" == ___local)&&("" == ___uri)) {
                            _getCommitment().add(((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl.class), 14, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  7 :
                        if (("code" == ___local)&&("" == ___uri)) {
                            _FinancingInstrument = ((org.digijava.module.ampharvester.jaxb10.impl.CodeValueTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.CodeValueTypeImpl.class), 8, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  16 :
                        if (("adjustmentType" == ___local)&&("" == ___uri)) {
                            _getDisbursement().add(((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  10 :
                        if (("language" == ___local)&&("" == ___uri)) {
                            _Condition = ((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl.class), 11, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("financingId" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        state = 15;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  21 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("financingId" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "language");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "financingId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            state = 15;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "code");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  21 :
                            revertToParentFromText(value);
                            return ;
                        case  19 :
                            attIdx = context.getAttribute("", "adjustmentType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "adjustmentType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  7 :
                            attIdx = context.getAttribute("", "code");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "adjustmentType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  10 :
                            attIdx = context.getAttribute("", "language");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Condition = ((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl) spawnChildFromText((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl.class), 11, value));
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "financingId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
