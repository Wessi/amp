//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.06.19 at 04:51:40 GMT+04:00 
//


package org.digijava.module.ampharvester.jaxb10.impl;

public class ComponentTypeImpl implements org.digijava.module.ampharvester.jaxb10.ComponentType, com.sun.xml.bind.JAXBObject, org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallableObject, org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializable, org.digijava.module.ampharvester.jaxb10.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Commitment;
    protected com.sun.xml.bind.util.ListImpl _PhysicalProgress;
    protected com.sun.xml.bind.util.ListImpl _Expenditure;
    protected com.sun.xml.bind.util.ListImpl _Disbursement;
    protected java.lang.String _Code;
    protected org.digijava.module.ampharvester.jaxb10.FreeTextType _Title;
    public final static java.lang.Class version = (org.digijava.module.ampharvester.jaxb10.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.digijava.module.ampharvester.jaxb10.ComponentType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getCommitment() {
        if (_Commitment == null) {
            _Commitment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Commitment;
    }

    public java.util.List getCommitment() {
        return _getCommitment();
    }

    protected com.sun.xml.bind.util.ListImpl _getPhysicalProgress() {
        if (_PhysicalProgress == null) {
            _PhysicalProgress = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _PhysicalProgress;
    }

    public java.util.List getPhysicalProgress() {
        return _getPhysicalProgress();
    }

    protected com.sun.xml.bind.util.ListImpl _getExpenditure() {
        if (_Expenditure == null) {
            _Expenditure = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Expenditure;
    }

    public java.util.List getExpenditure() {
        return _getExpenditure();
    }

    protected com.sun.xml.bind.util.ListImpl _getDisbursement() {
        if (_Disbursement == null) {
            _Disbursement = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Disbursement;
    }

    public java.util.List getDisbursement() {
        return _getDisbursement();
    }

    public java.lang.String getCode() {
        return _Code;
    }

    public void setCode(java.lang.String value) {
        _Code = value;
    }

    public org.digijava.module.ampharvester.jaxb10.FreeTextType getTitle() {
        return _Title;
    }

    public void setTitle(org.digijava.module.ampharvester.jaxb10.FreeTextType value) {
        _Title = value;
    }

    public org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingContext context) {
        return new org.digijava.module.ampharvester.jaxb10.impl.ComponentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Commitment == null)? 0 :_Commitment.size());
        int idx2 = 0;
        final int len2 = ((_PhysicalProgress == null)? 0 :_PhysicalProgress.size());
        int idx3 = 0;
        final int len3 = ((_Expenditure == null)? 0 :_Expenditure.size());
        int idx4 = 0;
        final int len4 = ((_Disbursement == null)? 0 :_Disbursement.size());
        if (_Title!= null) {
            context.startElement("", "title");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Title), "Title");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Title), "Title");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Title), "Title");
            context.endElement();
        }
        while (idx1 != len1) {
            context.startElement("", "commitment");
            int idx_2 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Commitment.get(idx_2 ++)), "Commitment");
            context.endNamespaceDecls();
            int idx_3 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Commitment.get(idx_3 ++)), "Commitment");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Commitment.get(idx1 ++)), "Commitment");
            context.endElement();
        }
        while (idx4 != len4) {
            context.startElement("", "disbursement");
            int idx_4 = idx4;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Disbursement.get(idx_4 ++)), "Disbursement");
            context.endNamespaceDecls();
            int idx_5 = idx4;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Disbursement.get(idx_5 ++)), "Disbursement");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Disbursement.get(idx4 ++)), "Disbursement");
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("", "expenditure");
            int idx_6 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expenditure.get(idx_6 ++)), "Expenditure");
            context.endNamespaceDecls();
            int idx_7 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expenditure.get(idx_7 ++)), "Expenditure");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expenditure.get(idx3 ++)), "Expenditure");
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("", "physicalProgress");
            int idx_8 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PhysicalProgress.get(idx_8 ++)), "PhysicalProgress");
            context.endNamespaceDecls();
            int idx_9 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PhysicalProgress.get(idx_9 ++)), "PhysicalProgress");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _PhysicalProgress.get(idx2 ++)), "PhysicalProgress");
            context.endElement();
        }
    }

    public void serializeAttributes(org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Commitment == null)? 0 :_Commitment.size());
        int idx2 = 0;
        final int len2 = ((_PhysicalProgress == null)? 0 :_PhysicalProgress.size());
        int idx3 = 0;
        final int len3 = ((_Expenditure == null)? 0 :_Expenditure.size());
        int idx4 = 0;
        final int len4 = ((_Disbursement == null)? 0 :_Disbursement.size());
        context.startAttribute("", "code");
        try {
            context.text(((java.lang.String) _Code), "Code");
        } catch (java.lang.Exception e) {
            org.digijava.module.ampharvester.jaxb10.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx4 != len4) {
            idx4 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public void serializeURIs(org.digijava.module.ampharvester.jaxb10.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Commitment == null)? 0 :_Commitment.size());
        int idx2 = 0;
        final int len2 = ((_PhysicalProgress == null)? 0 :_PhysicalProgress.size());
        int idx3 = 0;
        final int len3 = ((_Expenditure == null)? 0 :_Expenditure.size());
        int idx4 = 0;
        final int len4 = ((_Disbursement == null)? 0 :_Disbursement.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx4 != len4) {
            idx4 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.digijava.module.ampharvester.jaxb10.ComponentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001psr\u0000 com"
+".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gram"
+"mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cpsr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u00004org.digijava.module.ampharv"
+"ester.jaxb10.FreeTextTypet\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementssq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000"
+"#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http:"
+"//www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0005titlet\u0000\u0000q\u0000"
+"~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\np"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00009org.digijav"
+"a.module.ampharvester.jaxb10.FundingDetailTypeq\u0000~\u0000&sq\u0000~\u0000\npps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\ncommitmentq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000"
+"\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Kq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\fdisbursementq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\n"
+"ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Kq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u000bexpenditureq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\npp"
+"sq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<org.digijava.module.am"
+"pharvester.jaxb10.PhysicalProgressTypeq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0010physicalProgressq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0018p"
+"psq\u0000~\u0000)ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxq\u0000~\u0000.q\u0000~\u00003t\u0000\u0006stringsr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006\u0001q\u0000~\u00009sq\u0000~\u0000"
+":q\u0000~\u0000|q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004codeq\u0000~\u0000Asr\u0000\"com.sun.msv.grammar.Express"
+"ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
+"ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
+"ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lco"
+"m/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\"\u0001pq\u0000~\u0000\bq\u0000~\u0000\'q\u0000~\u0000Lq\u0000~\u0000"
+"Yq\u0000~\u0000fq\u0000~\u0000tq\u0000~\u0000\u0012q\u0000~\u0000Eq\u0000~\u0000Sq\u0000~\u0000`q\u0000~\u0000mq\u0000~\u0000\u0005q\u0000~\u0000\tq\u0000~\u0000\u0006q\u0000~\u0000\u000bq\u0000~\u0000"
+"\u0014q\u0000~\u0000Gq\u0000~\u0000Uq\u0000~\u0000bq\u0000~\u0000oq\u0000~\u0000Bq\u0000~\u0000Pq\u0000~\u0000]q\u0000~\u0000jq\u0000~\u0000\u0007q\u0000~\u0000Cq\u0000~\u0000Qq\u0000~\u0000"
+"\u0017q\u0000~\u0000Hq\u0000~\u0000Vq\u0000~\u0000cq\u0000~\u0000^q\u0000~\u0000pq\u0000~\u0000kx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.digijava.module.ampharvester.jaxb10.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(org.digijava.module.ampharvester.jaxb10.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.digijava.module.ampharvester.jaxb10.impl.ComponentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("commitment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("disbursement" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("expenditure" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("physicalProgress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        if (("commitment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "language");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "reportingDate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  18 :
                        if (("physicalProgress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  10 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("title" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        if (("disbursement" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("expenditure" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Code = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("commitment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "language");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "reportingDate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        if (("physicalProgress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  11 :
                        if (("disbursement" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("title" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("expenditure" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  4 :
                        if (("language" == ___local)&&("" == ___uri)) {
                            _Title = ((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  16 :
                        if (("reportingDate" == ___local)&&("" == ___uri)) {
                            _getPhysicalProgress().add(((org.digijava.module.ampharvester.jaxb10.impl.PhysicalProgressTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.PhysicalProgressTypeImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  13 :
                        if (("adjustmentType" == ___local)&&("" == ___uri)) {
                            _getExpenditure().add(((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl.class), 14, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("code" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        if (("adjustmentType" == ___local)&&("" == ___uri)) {
                            _getDisbursement().add(((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  7 :
                        if (("adjustmentType" == ___local)&&("" == ___uri)) {
                            _getCommitment().add(((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.ampharvester.jaxb10.impl.FundingDetailTypeImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "language");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "reportingDate");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("code" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "adjustmentType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            state = 12;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "language");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Title = ((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl) spawnChildFromText((org.digijava.module.ampharvester.jaxb10.impl.FreeTextTypeImpl.class), 5, value));
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "reportingDate");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  13 :
                            attIdx = context.getAttribute("", "adjustmentType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "code");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "adjustmentType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            attIdx = context.getAttribute("", "adjustmentType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
