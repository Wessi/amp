<project name="digijava" basedir="." default="compile">


    <!-- Local system paths -->
    <property file="digijava.properties"/>
    <!-- NOTE: If "dist" target is used, a local
             "dist" directory will be utilized or created -->
    <property name="distpath.project" value="./dist"/>
	<property name="debug" value="true" />


    <!-- Project settings -->
    <property name="project.title" value="DiGiJava "/>
    <property name="project.distname" value="digijava"/>
    <property name="project.version" value="1.1"/>
    <property name="lib" location="./WEB-INF/lib" />
    <property name="webinf" location="./WEB-INF" />    
    <property name="system.lib" location="./WEB-INF/system-lib" />
    <property name="classes" location="./WEB-INF/classes" />
    <property name="src" location="./WEB-INF/src" />
    <property name="test" location="./WEB-INF/test" />
    <property name="etc" location="./etc" />
    <property name="deployConfigs" location="deployConfigs"/>
	<property name="repository" location="./repository"/>

    <!-- Path settings -->
    <property name="doc.path" value="./doc/api"/>
    <property name="doc.src" value="./src/java"/>


    <!-- classpath for Struts 1.1 -->
    <path id="compile.classpath">
        <fileset dir="${lib}">
          <include name="**/*.jar"/>
          <include name="**/*.zip"/>
        </fileset>
        <fileset dir="${jboss-lib}">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${system.lib}">
          <include name="**/*.jar"/>
          <include name="**/*.zip"/>
        </fileset>
    </path>

    <!-- classpath for Struts 1.1 -->
    <path id="run.classpath">
		<pathelement location="${etc}"/>
		<pathelement location="${classes}"/>
        <fileset dir="${lib}">
          <include name="**/*.jar"/>
          <include name="**/*.zip"/>
        </fileset>
        <fileset dir="${system.lib}">
          <include name="**/*.jar"/>
          <include name="**/*.zip"/>
        </fileset>
    </path>


    <!-- Check timestamp on files -->
    <target name="prepare">
        <tstamp/>
        <mkdir  dir="${classes}"/>
        <mkdir  dir="${distpath.project}"/>
    </target>


    <!-- Copy any resource or configuration files -->
    <target name="resources">
        <copy todir="${classes}" includeEmptyDirs="no">
            <fileset dir="${src}">
            <patternset>
            	<exclude name="CVS/*"/>
                <include name="**/*.conf"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.ccf"/>
                <include name="**/*.xsl"/>
                <include name="**/*.xsd"/>
				<include name="**/*.jrxml"/>
				<include name="initSQL/*.sql"/>
            </patternset>
            </fileset>
        </copy>
    </target>

    <target name="testResources">
        <copy todir="${classes}" includeEmptyDirs="no">
            <fileset dir="${test}">
            <patternset>
                <include name="**/*.conf"/>
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.ccf"/>
                <include name="**/*.xsl"/>
                <include name="**/*.xsd"/>
	            </patternset>
            </fileset>
        </copy>
    </target>

    <!-- Create DB data-model in a fresh schema -->
    <target name="database" depends="compile">
      <java classname="org.digijava.kernel.util.DigiSchemaExport" fork="yes">
  	    <classpath refid="run.classpath"/>
      </java>
    </target>

    <!-- Create DB data-model in a fresh schema -->
    <target name="permissions" depends="compile">
      <java classname="org.digijava.kernel.security.util.PermissionConverter" fork="yes">
  	    <classpath refid="run.classpath"/>
      </java>
    </target>

    <!-- Create DB data-model in a fresh schema -->
    <target name="modDatabase" depends="compile">
      <java classname="org.digijava.kernel.util.DigiSchemaExport" fork="yes">
        <arg value="-m"/>
 	    <arg value="${module.name}"/>
  	    <classpath refid="run.classpath"/>
      </java>
    </target>

    <!-- Export table names in comma-separated style -->
    <target name="tableNames" depends="compile">
      <java classname="org.digijava.kernel.util.DigiSchemaExport" fork="yes">
        <arg value="-names"/>
  	    <classpath refid="run.classpath"/>
      </java>
    </target>

    <!-- Export table names in comma-separated style -->
    <target name="modTableNames" depends="compile">
      <java classname="org.digijava.kernel.util.DigiSchemaExport" fork="yes">
        <arg value="-names"/>
        <arg value="-m"/>
 	    <arg value="${module.name}"/>
  	    <classpath refid="run.classpath"/>
      </java>
    </target>

    <!-- Populate fresh data-model with initial data -->
    <target name="install" depends="database">
      <java classname="org.digijava.kernel.util.DigiSchemaPopulate" fork="yes">
         <classpath refid="run.classpath"/>
      </java>
    </target>


    <!-- Normal build of application -->
    <target name="compile" depends="prepare,resources">
        <javac srcdir="${src}" destdir="${classes}" deprecation="off" debug="${debug}" fork="yes" memoryMaximumSize="512m">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="testCompile" depends="compile, testResources">
        <javac srcdir="${src}" destdir="${classes}" deprecation="off" debug="${debug}">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>


    <!-- Remove classes directory for clean build -->
    <target name="clean"
      description="Prepare for clean build">
      <delete dir="${classes}"/>
      <delete dir="${doc.path}"/>
    </target>


    <!-- Build Javadoc documentation -->
    <target name="javadoc"
     description="Generate JavaDoc API docs">
        <delete dir="${doc.path}"/>
        <mkdir dir="${doc.path}"/>
        <javadoc sourcepath="${src}"
            destdir="${doc.path}"
            packagenames="*"
            author="true"
            private="true"
            version="true"
            windowtitle="${project.title} API Documentation"
            doctitle="&lt;h1&gt;${project.title} Documentation (Version ${project.version})&lt;/h1&gt;">
            <classpath refid="compile.classpath"/>
        </javadoc>
    </target>


    <!-- Build entire project -->
    <target name="project" depends="clean,prepare,compile,javadoc"/>

    <!-- Clean the distribution directories to prevent dist from failing the second time around -->
    <target name="cleanDist">
        <tstamp/>
        <delete  dir="${distpath.project}"/>
    </target>

    <!-- Create binary distribution -->
    <target name="dist"
        description="Create binary distribution" depends="cleanDist, compile">

      <mkdir
        dir="${distpath.project}"/>
      <jar
        jarfile="${distpath.project}/${project.distname}.jar"
        basedir="${classes}"/>
      <copy
        file="${distpath.project}/${project.distname}.jar"
        todir="${distpath.project}"/>

      <war
        basedir="./"
        warfile="${distpath.project}/${project.distname}.war"
        webxml="web.xml">
        <exclude name="${distpath.project}/${project.distname}.war"/>
       </war>

    </target>

    <!-- compile and deploy to the folder specified in digijava.deploy -->
    <target name="deployDir" depends="compile"
    description="Compiles the source code, and moves the war into the deployment directory specified in the properties file">
        <mkdir dir="${digijava.deploy}/${project.distname}.war"/>
        <copy toDir="${digijava.deploy}/${project.distname}.war">
            <fileset dir="../">
                <exclude name="**/*.jpx" />
                <exclude name="**/*.library" />
                <exclude name="**/.*" />
            </fileset>
        </copy>
    </target>

	<target name="deployForServer" description="deploys the project for use with a given database">
		<copy file="${deployConfigs}/${serverName}/hibernate.properties" todir="${src}"/> 
		<copy file="${deployConfigs}/${serverName}/digi.xml" todir="${repository}"/> 				
		<copy file="${deployConfigs}/${serverName}/jboss-web.xml" todir="${webinf}"/> 		
		
	</target>

    <target name="junit" depends="testCompile">
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
    	    <classpath refid="run.classpath"/>
  		<formatter type="xml"/>
  		<formatter type="plain"/>
  		<test name="org.digijava.test.AllTests" haltonfailure="no" outfile="test_result"/>
	</junit>
    </target>
    
    <target name="restart" description="restarts the web application">
    	<touch file="${webinf}/web.xml"/>
    </target>


    <!-- Build project and create distribution-->
    <target name="all" depends="project,dist"/>

    <target name="distributives"
        description="Create jar for UM module" depends="clean, cleanDist, compile">

      <mkdir
        dir="${distpath.project}"/>

	  <!-- BINARY PACKAGES -->
      <!-- Create jar for kernel -->
      <jar
        jarfile="${distpath.project}/${project.distname}-kernel.jar"
        basedir="${classes}" includes="org/digijava/kernel/**/*.*" excludes="org/digijava/kernel/translator/action/**/*.*, org/digijava/kernel/translator/form/**/*.*"/>

      <!-- Create jar for translator part of kernel -->
      <jar
        jarfile="${distpath.project}/${project.distname}-translator.jar"
        basedir="${classes}" includes="org/digijava/kernel/translator/action/**/*.*, org/digijava/kernel/translator/form/**/*.*, org/digijava/module/translation/**/*.*"/>

      <!-- Create jar for UM module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-um.jar"
        basedir="${classes}" includes="org/digijava/module/um/**/*.*"/>

      <!-- Create jar for news module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-news.jar"
        basedir="${classes}" includes="org/digijava/module/news/**/*.*"/>

      <!-- Create jar for calendar module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-calendar.jar"
        basedir="${classes}" includes="org/digijava/module/calendar/**/*.*"/>

      <!-- Create jar for admin module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-admin.jar"
        basedir="${classes}" includes="org/digijava/module/admin/**/*.*"/>

      <!-- Create jar for common module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-common.jar"
        basedir="${classes}" includes="org/digijava/module/common/**/*.*"/>

      <!-- Create jar for highlights module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-highlights.jar"
        basedir="${classes}" includes="org/digijava/module/highlights/**/*.*"/>

      <!-- Create jar for sdm module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-sdm.jar"
        basedir="${classes}" includes="org/digijava/module/sdm/**/*.*"/>

      <!-- Create jar for editor module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-editor.jar"
        basedir="${classes}" includes="org/digijava/module/editor/**/*.*"/>

      <!-- Create jar for exception module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-exception.jar"
        basedir="${classes}" includes="org/digijava/module/exception/**/*.*"/>

      <!-- Create jar for forum module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-forum.jar"
        basedir="${classes}" includes="org/digijava/module/forum/**/*.*"/>

      <jar
        jarfile="${distpath.project}/${project.distname}-syndication.jar"
        basedir="${classes}" includes="org/digijava/module/syndication/**/*.*"/>

	  <!-- SOURCE PACKAGES -->
      <!-- Create jar for kernel -->
      <jar
        jarfile="${distpath.project}/${project.distname}-kernel-src.jar"
        basedir="${src}" includes="org/digijava/kernel/**/*.*" excludes="org/digijava/kernel/translator/action/**/*.*, org/digijava/kernel/translator/form/**/*.*"/>

      <!-- Create jar for translator part of kernel -->
      <jar
        jarfile="${distpath.project}/${project.distname}-translator-src.jar"
        basedir="${src}" includes="org/digijava/kernel/translator/action/**/*.*, org/digijava/kernel/translator/form/**/*.*, org/digijava/module/translation/**/*.*"/>

      <!-- Create jar for UM module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-um-src.jar"
        basedir="${src}" includes="org/digijava/module/um/**/*.*"/>

      <!-- Create jar for news module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-news-src.jar"
        basedir="${src}" includes="org/digijava/module/news/**/*.*"/>

      <!-- Create jar for calendar module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-calendar-src.jar"
        basedir="${src}" includes="org/digijava/module/calendar/**/*.*"/>

      <!-- Create jar for admin module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-admin-src.jar"
        basedir="${src}" includes="org/digijava/module/admin/**/*.*"/>

      <!-- Create jar for common module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-common-src.jar"
        basedir="${src}" includes="org/digijava/module/common/**/*.*"/>

      <!-- Create jar for highlights module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-highlights-src.jar"
        basedir="${src}" includes="org/digijava/module/highlights/**/*.*"/>

      <!-- Create jar for sdm module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-sdm-src.jar"
        basedir="${src}" includes="org/digijava/module/sdm/**/*.*"/>

      <!-- Create jar for editor module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-editor-src.jar"
        basedir="${src}" includes="org/digijava/module/editor/**/*.*"/>

      <!-- Create jar for exception module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-exception-src.jar"
        basedir="${src}" includes="org/digijava/module/exception/**/*.*"/>

      <!-- Create jar for forum module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-forum-src.jar"
        basedir="${src}" includes="org/digijava/module/forum/**/*.*"/>

      <!-- Create jar for forum module -->
      <jar
        jarfile="${distpath.project}/${project.distname}-syndication-src.jar"
        basedir="${src}" includes="org/digijava/module/syndication/**/*.*"/>
    </target>


</project>
