<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 2.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">
<hibernate-mapping>
	<class name="org.digijava.module.aim.dbentity.AmpTeam" table="AMP_TEAM">
		<cache usage="read-write" />
		<id name="ampTeamId" column="amp_team_id" type="java.lang.Long">
			<generator class="native">
				<param name="sequence">AMP_TEAM_seq</param>
			</generator>
		</id>

		<property name="name" column="name" type="java.lang.String"/>
		<property name="type" column="type" type="java.lang.String"/>
		<property name="accessType" column="access_type" type="java.lang.String"/>
		<property name="description" column="description"  type="org.digijava.kernel.db.SafeClobType"/>

		<many-to-one name="teamLead" column="team_lead_id" class="org.digijava.module.aim.dbentity.AmpTeamMember" cascade="none"/>
		
		<many-to-one name="parentTeamId" column="parent_team_id" class="org.digijava.module.aim.dbentity.AmpTeam" cascade="none"/>
		

	 <set name="teamPageFilters" table="amp_team_page_filters">
				<key column="amp_team_id"/>
				<composite-element class="org.digijava.module.aim.dbentity.AmpTeamPageFilters">
						  <many-to-one name="pages" class="org.digijava.module.aim.dbentity.AmpPages" 
									 column="amp_page_id"/>
						  <many-to-one name="filters" class="org.digijava.module.aim.dbentity.AmpFilters" 
									 column="amp_filter_id"/>
				</composite-element>
	 </set>
	 
	 	<!-- not needed
		<set name="activityList" table="amp_team_activities" lazy="true">
  	            <cache usage="read-write"/>
				<key column="amp_team_id"/>
				<many-to-many class="org.digijava.module.aim.dbentity.AmpActivity" column="amp_activity_id"/>
		</set>			
		-->
	 
	</class>
</hibernate-mapping>
