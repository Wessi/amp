<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-18729</jira>
	<keyword>Views</keyword>
	<author>Constantin Dolghier</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger>
	<apply>
		<script>
			<lang delimiter=";" type="postgres">
				DROP VIEW IF EXISTS v_mondrian_pledge_transactions CASCADE;
			    CREATE OR REPLACE VIEW v_mondrian_pledge_transactions AS
SELECT	<!-- pledged money -->
	afpd.pledge_id,
	800000000 + afpd.id AS funding_id, <!-- pledge funding does not have a funding id, so at least namespace them -->
	afpd.id AS amp_pledge_funding_id, 
	999999999 AS related_activity_id, 
	7 AS transaction_type,
	(select acv.id from amp_category_value acv where acv.category_value = 'Actual' and acv.amp_category_class_id = (select id from amp_category_class where keyname='adjustment_type')) AS adjustment_type,
	CASE
		WHEN afpd.datestart IS NULL THEN to_date('02 Jan '::text || afpd.year::text, 'DD Mon YYYY'::text)::timestamp without time zone
		ELSE afpd.datestart
	END AS transaction_date,
	CASE
		WHEN afpd.dateend IS NULL THEN 'Undefined'
		ELSE to_char(afpd.dateend, gs.date_format)
	END AS transaction_end_date,
	afpd.amount AS transaction_amount,
	(999999999) AS expenditure_class,
	afpd.currency AS currency_id,
	afpd.pledge_type AS pledge_type,
	afpd.type_of_assistance AS type_of_assistance,
	afpd.aid_modality AS aid_modality,
	999999999 AS agreement_id,
	CASE 
		WHEN afpd.datestart IS NOT NULL AND afpd.dateend IS NOT NULL THEN (date(afpd.datestart) || ' - '::text) || date(afpd.dateend)
		ELSE 'Undefined'
	END AS funding_range,
	800000000 + afp.amp_org_grp_id AS originating_org_id,
	afp.status AS status_id
	
FROM amp_funding_pledges_details afpd JOIN amp_funding_pledges afp ON afp.id = afpd.pledge_id, 
    (SELECT settingsvalue as date_format FROM amp_global_settings WHERE settingsname LIKE 'Default Date Format') AS gs

UNION ALL

SELECT <!-- pledge-financed donor transactions -->
	vmpt.pledge_id, vmpt.amp_funding_id AS funding_id, vmpt.amp_fund_detail_id AS amp_pledge_funding_id, 
	vmpt.amp_activity_id AS related_activity_id,
	vmpt.transaction_type,
	vmpt.adjustment_type,
	vmpt.transaction_date,
	'Undefined' as transaction_end_date,
	vmpt.transaction_amount,
	(999999999) AS expenditure_class,
	vmpt.currency_id,
	999999999 AS pledge_type,
	999999999 AS type_of_assistance,
	999999999 AS aid_modality,
	vmpt.agreement_id AS agreement_id,
	'Undefined' as funding_range,
	vmpt.originating_org_id,
	afp.status AS status_id
	
FROM 
	v_mondrian_pure_transactions vmpt 
		JOIN amp_funding_pledges afp ON vmpt.pledge_id = afp.id
		WHERE (vmpt.pledge_id IS NOT NULL) AND (vmpt.draft &lt;&gt; true) AND (vmpt.deleted &lt;&gt; true) AND (vmpt.is_last_version &gt; 0) 
			AND (vmpt.src_role = 'DN');  <!-- only donor transactions -->

			</lang>
		</script>
	</apply>
</tns:patch>