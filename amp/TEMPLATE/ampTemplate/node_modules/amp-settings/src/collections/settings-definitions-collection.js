var Deferred = require('jquery').Deferred;
var _ = require('underscore');
var Backbone = require('backbone');
var Setting = require('../models/settings-definitions');
var Utils = require('../common/utils');
var Config = require('../common/config');

module.exports  = Backbone.Collection.extend({
	model : Setting,
	comparator: 'id',
	firstTime: true,
	initialize: function(models, options) {
		this.options = options;
		this.url = options.definitionUrl;
		this._loaded = new Deferred();
		_.bindAll(this,'load');
	},
	parse: function(settings) {
	   return settings;	    
	},
    load: function() {
		if (this.firstTime) {
			this.firstTime = false;
			if (this._loaded.state() !== 'pending') { return this._loaded.promise(); }
			this.fetch({})
			.then(_(function() {
				this._loaded.resolve();
			}).bind(this))
			.fail(_(function() {			       
				this._loaded.reject();
			}).bind(this));
		}    
		return this._loaded.promise();
	}

});

