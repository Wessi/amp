var fs = require('fs');
var _ = require('underscore');
var $ = require('jquery');

var Backbone = require('backbone');
var TitleTemplate = fs.readFileSync(__dirname + '/../templates/filter-title-template.html', 'utf8');
var ContentTemplate = fs.readFileSync(__dirname + '/../templates/filters-top-level-template.html', 'utf8');

var GenericFilterView = require('../views/generic-filter-view');
var YearsFilterView = require('../views/years-filter-view');

var YearsFilterModel = require('../models/years-filter-model');


//TODO: rename to 'group' to be consistent
// Parent base view for filters.
module.exports = Backbone.View.extend({
  className:  'tab-pane',
  titleTemplate: _.template(TitleTemplate),
  contentTemplate: _.template(ContentTemplate),
  filterCollection: null,
  viewList:[],
  name: 'tbd',

  initialize:function(options) {
    var self = this;
    this.name = options.name;
    this.translator = options.translator;
    this.translate = options.translate;
    this.filterCollection = new Backbone.Collection();
    this.filterCollection.on('change:numSelected', function(){
      self._refreshTitle();
    });
  },

  renderFilters: function() {
    var self = this;
    var view = null;
    var first = true;
    this.$el.attr('id', 'filter-pane-' + this.name.replace(/ /g,''));
    this.$el.html(this.contentTemplate());
    this.filterCollection.each(function(filter) {

      if (filter instanceof YearsFilterModel) {
        view = new YearsFilterView({
          model:filter,
          el: self.$('.sub-filters-content'),
          translator: self.translator,
          translate: self.translate
        });
        self.viewList.push(view);
      } else {
        view = new GenericFilterView({
          model:filter,
          el: self.$('.sub-filters-content'),
          translator: self.translator,
          translate: self.translate
        });
        self.viewList.push(view);
      }

      self.$('.sub-filters-titles').append(view.renderTitle().$titleEl);

      // hacky way to open first one for now.
      if (first) {
        first = false;
        view.renderFilters();
        self.$('.sub-filters-titles li:first').addClass('active');
      }
    });

    // We need to re-translate some strings from the right panel.
	self.translate(this);

   	return this;
  },

  _refreshTitle: function(){
    var totalSelected = 0;
    var countStr ='';

    this.filterCollection.each(function(filter) {
      if(filter.getNumSelected){
        totalSelected += filter.getNumSelected();
      }
    });

    if( totalSelected !== 0) {
      countStr = totalSelected;
    }

    // TODO: should be locally scoped, not global jquery.
    $('#'+this.name.replace(/ /g,'') + ' .title-count').text(countStr);
  },

  renderTitle: function() {
    this.titleEl = this.titleTemplate({name: this.name});
    return this;
  }
});
