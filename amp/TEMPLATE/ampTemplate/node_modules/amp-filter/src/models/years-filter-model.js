var $ = require('jquery');
var BaseFilterModel = require('../models/base-filter-model');


module.exports = BaseFilterModel.extend({

  //TODO: serialize-deserialize functions

  initialize:function(options) {
    BaseFilterModel.prototype.initialize.apply(this, [options]);
    this.url = options.endpoint;
    this.set({
      name: 'Years',
      selectedStart: null,
      selectedEnd: null,
      // range is provided by api, but will fallback to this if ot provided, or set to -1
      startYear: '01/01/1961',
      endYear: '31/12/2015'
    });
    this.set('_loaded', $.Deferred());
  },

  parse:function(data) {
    if (!data.startYear || data.startYear === -1) {
      data.startYear = this.attributes.startYear;
    }

    if (!data.endYear || data.endYear === -1) {
      data.endYear = this.attributes.endYear;
    }

    this.get('_loaded').resolve();
    return data;
  },

  serialize: function() {
    return {
      startYear: this._dateConvert(this.get('selectedStart')),
      endYear: this._dateConvert(this.get('selectedEnd'))
    };
  },

  deserialize: function(obj) {
    this.set('selectedStart', obj.startYear);
    this.set('selectedEnd', obj.endYear);
  },

  reset: function() {
    this.set('selectedStart', this.get('startYear'));
    this.set('selectedEnd', this.get('endYear'));
  },

  // input; 03/01/1961
  // output: 1961-01-01
  _dateConvert: function(input){
    if(input){
      input = input.split('/');
      var output = input[2] + '-' + input[1] + '-' + input[0];
      return output;
    } else{
      return null;
    }
  }

});
