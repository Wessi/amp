## MySQL
hibernate.dialect org.hibernate.dialect.MySQLDialect

#transaction manager
hibernate.transaction.factory_class = org.hibernate.transaction.JDBCTransactionFactory
hibernate.transaction.manager_lookup_class = org.hibernate.transaction.JBossTransactionManagerLookup

hibernate.max_fetch_depth 2
hibernate.use_outer_join true
hibernate.hbm2ddl.auto update

#DEVELOPMENT ONLY!
hibernate.cglib.use_reflection_optimizer=false

## JNDI settings
hibernate.connection.datasource=java:tanzaniaStagingDS

##transaction isolation: 2 = READ-COMMITED, check with your mysql.ini "transaction-isolation" variable
hibernate.connection.isolation=2

#### Cache Settings #####
#hibernate.cache.provider_class=net.sf.ehcache.hibernate.SingletonEhCacheProvider
hibernate.cache.provider_class=net.sf.ehcache.hibernate.SingletonEhCacheProvider
#hibernate.cache.use_query_cache true

######################
### Query Language ###
######################

## define query language constants / function names

hibernate.query.substitutions true 1, false 0, yes 'Y', no 'N'

hibernate.show_sql false
#hibernate.show_sql true


hibernate.jdbc.use_streams_for_binary true


#################################
### Hibernate Connection Pool ###
#################################

hibernate.connection.pool_size 20
hibernate.statement_cache.size 200


###################################
### Stale-tolerant queries impl ###
###################################

#hibernate.cache.query_cache_factory=org.digijava.kernel.persistence.StaleTolerantQueryCacheFactory
# Tables that should be stale-tolerant for queries:
# hibernate.cache.stale_tolerable_query_spaces=EP_NOTICES,RC_ITEMS
