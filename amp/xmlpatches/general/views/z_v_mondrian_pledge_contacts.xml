<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-21336</jira>
	<keyword>Views</keyword>
	<author>nmandrescu</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script>
			<lang delimiter=";" type="postgres">
				<!-- We need to have to either have 2 same structure tables or single with duplicate columns to offer partial ETL instead of full when changing pledge contacts -->
				DROP VIEW IF EXISTS v_mondrian_pledge_contacts;
				CREATE OR REPLACE VIEW v_mondrian_pledge_contacts AS
					SELECT
						p.id AS pledge_id,
						COALESCE(p.contacttitle, 'Undefined') AS title1,
						COALESCE(p.contactname, 'Undefined') AS name1,
						COALESCE(p.contactaddress, 'Undefined') AS address1,
						COALESCE(p.contactemail, 'Undefined') AS email1,
						COALESCE(p.contactministry, 'Undefined') AS ministry1,
						COALESCE(p.contacttelephone, 'Undefined') AS phone1,
						COALESCE(p.contactfax, 'Undefined') AS fax1,
						CAST(999999999 as integer) AS amp_org_id1,
						COALESCE(p.contactalternativename, 'Undefined') AS alternate_name1,
						COALESCE(p.contactalternativeemail, 'Undefined') AS alternate_email1,
						COALESCE(p.contactalternativetelephone, 'Undefined') AS alternante_phone1,
						COALESCE(p.contacttitle_1, 'Undefined') AS title2,
						COALESCE(p.contactname_1, 'Undefined') AS name2,
						COALESCE(p.contactaddress_1, 'Undefined') AS address2,
						COALESCE(p.contactemail_1, 'Undefined') AS email2,
						COALESCE(p.contactministry_1, 'Undefined') AS ministry2,
						COALESCE(p.contacttelephone_1, 'Undefined') AS phone2,
						COALESCE(p.contactfax_1, 'Undefined') AS fax2,
						CAST(999999999 as integer) AS amp_org_id2,
						COALESCE(p.contactalternativename_1, 'Undefined') AS alternate_name2,
						COALESCE(p.contactalternativeemail_1, 'Undefined') AS alternate_email2,
						COALESCE(p.contactalternativetelephone_1, 'Undefined') AS alternante_phone2
					FROM amp_funding_pledges p;
						
				DROP VIEW IF EXISTS v_mondrian_activity_contacts;
				CREATE OR REPLACE VIEW v_mondrian_activity_contacts AS
					SELECT
						    a.amp_activity_id AS amp_activity_id,
							CAST('Undefined' as varchar(35)) AS title1, 
							CAST('Undefined' as varchar(35)) AS name1,
							CAST('Undefined' as varchar(35)) AS address1,
							CAST('Undefined' as varchar(35)) AS email1,
							CAST('Undefined' as varchar(35)) AS ministry1,
							CAST('Undefined' as varchar(35)) AS phone1,
							CAST('Undefined' as varchar(35)) AS fax1,
							999999999 AS amp_org_id1,
							CAST('Undefined' as varchar(35)) AS alternate_name1,
							CAST('Undefined' as varchar(35)) AS alternate_email1,
							CAST('Undefined' as varchar(35)) AS alternante_phone1,
							CAST('Undefined' as varchar(35)) AS title2, 
							CAST('Undefined' as varchar(35)) AS name2,
							CAST('Undefined' as varchar(35)) AS address2,
							CAST('Undefined' as varchar(35)) AS email2,
							CAST('Undefined' as varchar(35)) AS ministry2,
							CAST('Undefined' as varchar(35)) AS phone2,
							CAST('Undefined' as varchar(35)) AS fax2,
							999999999 AS amp_org_id2,
							CAST('Undefined' as varchar(35)) AS alternate_name2,
							CAST('Undefined' as varchar(35)) AS alternate_email2,
							CAST('Undefined' as varchar(35)) AS alternante_phone2
						FROM
							(SELECT aa.amp_activity_id
							FROM amp_activity_version aa
							UNION SELECT 999999999 as amp_activity_id 
							) as a;
			</lang>
		</script>
	</apply>
</tns:patch>
