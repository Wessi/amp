<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">

	<jira>AMP-7512</jira>
	<author>dare</author>
	<description>
		in the first script tag it checks whether Cat.Man contains necessary values for Events Type.If not,then inserts them.
		Second script inserts colors in cat.man if they don't exist.
		Third script fills category manager's event types with the event types from amp_event_type table if they don't exist(compares through names)
		4th script fills amp_calendrs events_type_id from updated category manager.
		5th script removes FK-s(event_type_id) from amp_calendar,then removes event_type_id column and after that drops unused amp_event_type table
	</description>	
	
	<trigger type="all">
		<condition type="tableOrViewExists">amp_event_type</condition>
	</trigger>
	
	<apply>
		<script>			
			<lang type="mysql" delimiter=";">
				insert into amp_category_class(category_name,keyName,is_multiselect,is_ordered)
				select 'Event type','event_type',false,true from dual where (select count(id) from amp_category_class where
				keyName like 'event_type')=0;
				
				insert into amp_category_class(category_name,keyName,is_multiselect,is_ordered)
				select 'Colors','event_color',false,true from dual where (select count(id) from amp_category_class where
				keyName like 'event_color')=0;
			</lang>
		</script>
		
		<script>
			<lang type="mysql" delimiter=";">
				SET @lastIndex=	(select count(*)-1 from amp_category_value where amp_category_class_id=(select id from amp_category_class where keyName='event_color'));

				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'aqua',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'aqua')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'black',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'black')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'blue',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'blue')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'fuchsia',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'fuchsia')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'silver',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'silver')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'green',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'green')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'lime',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'lime')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'maroon',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'maroon')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'navy',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'navy')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'purple',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'purple')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'teal',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'teal')=0 and id=(select id from amp_category_class where keyName='event_color');
				
				insert into `amp_category_value` (`category_value`, `amp_category_class_id`, `index_column`) 
				select 'yellow',id,@lastIndex:=@lastIndex+1 from amp_category_class where (select count(*) from amp_category_value where category_value like 'yellow')=0 and id=(select id from amp_category_class where keyName='event_color');
				
			</lang>		
		</script>
		
		<script>
			<lang type="mysql" delimiter=";">
				SET @idx:=(select count(id)-1 from amp_category_value where amp_category_class_id=(select id from amp_category_class where keyName='event_type'));

				insert into amp_category_value (category_value, amp_category_class_id, index_column,field_type)
					select et.NAME, cls.id, @idx:=@idx+1, 0 from amp_event_type as et, amp_category_class as cls where cls.keyName like 'event_type' 
					and not exists (select * from amp_category_value cv where cv.amp_category_class_id=cls.id and cv.category_value=et.NAME);
			</lang>
		</script>
		
		<script>
			<lang type="mysql" delimiter=";">
				drop temporary table if exists temp_event_type;
				create temporary table temp_event_type(
					SELECT evType.id as event_type_id ,cat.id as cat_id,cat.category_value as cat_val 
					FROM amp_category_value cat join amp_event_type evType 
					on evType.name=cat.category_value
				);
				
				update amp_calendar c
				set events_type_id=(select cat_id from temp_event_type where c.event_type_id=event_type_id) where events_type_id is null;
				
				drop temporary table temp_event_type;
			</lang>
		</script>
		
		<script>
			<lang type="mysql" delimiter="$">
				DROP PROCEDURE IF EXISTS updateAmpCalendar$ 
				CREATE PROCEDURE updateAmpCalendar()  MODIFIES SQL DATA 
				 BEGIN 
				
				 DECLARE done INT DEFAULT 0;
				 DECLARE a varchar(512);
				 DECLARE cur1 CURSOR FOR select CONSTRAINT_NAME from information_schema.KEY_COLUMN_USAGE where TABLE_NAME ='amp_calendar' and COLUMN_NAME like'EVENT_TYPE_ID' and TABLE_SCHEMA =(SELECT database());
				 DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
				 OPEN cur1;
				
					REPEAT 
						FETCH cur1 INTO a; 
						IF NOT done THEN 
							SET @s = concat('alter table  amp_calendar  DROP FOREIGN KEY  ',a,';');
							prepare stmt from @s;
							execute stmt;
							DEALLOCATE prepare stmt;
						END IF;
					UNTIL done END REPEAT;
					CLOSE cur1;
					update amp_calendar set EVENT_TYPE_ID=null;
					alter table amp_calendar drop column EVENT_TYPE_ID;
					drop table if exists amp_event_type; 
				
				END$
				call updateAmpCalendar()$ 
				drop PROCEDURE updateAmpCalendar$ 
			</lang>
		</script>
	</apply>
</tns:patch>
