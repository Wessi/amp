<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-25226</jira>
	<keyword>Create tables and sequences for new gpi survey implementation</keyword>
	<author>gmutuhu</author>
	<description>Create tables and sequences for new gpi survey implementation</description>
	<apply>
	<script>
		<lang delimiter=";" type="postgres">

			CREATE SEQUENCE amp_gpi_ni_indicator_seq
			INCREMENT 1
			MINVALUE 1
			MAXVALUE 9223372036854775807
			START 1
			CACHE 1;
			ALTER TABLE amp_gpi_ni_indicator_seq
			OWNER TO amp;


			-- Table: amp_gpi_ni_indicator

			CREATE TABLE IF NOT EXISTS amp_gpi_ni_indicator
			(
			amp_gpi_ni_indicator_id bigint NOT NULL,
			code character varying(255),
			description text,
			CONSTRAINT amp_gpi_indicator_code_unique UNIQUE (code)
			CONSTRAINT amp_gpi_ni_indicator_pkey PRIMARY KEY (amp_gpi_ni_indicator_id)
			)
			WITH (
			OIDS=FALSE
			);
			ALTER TABLE amp_gpi_ni_indicator
			OWNER TO amp;


			-- Sequence: amp_gpi_ni_question_seq

			CREATE SEQUENCE amp_gpi_ni_question_seq
			INCREMENT 1
			MINVALUE 1
			MAXVALUE 9223372036854775807
			START 1
			CACHE 1;
			ALTER TABLE amp_gpi_ni_question_seq
			OWNER TO amp;

			-- Table: amp_gpi_ni_question


			CREATE TABLE IF NOT EXISTS amp_gpi_ni_question
			(
			amp_gpi_ni_question_id bigint NOT NULL,
			amp_gpi_ni_indicator_id bigint,
			code character varying(255),
			description text,
			type character varying(50),
			allow_multiple boolean,
			index integer,
			requires_data_entry boolean,
			CONSTRAINT amp_gpi_ni_question_id_pkey PRIMARY KEY (amp_gpi_ni_question_id),
			CONSTRAINT amp_gpi_ni_indicator_id_fkey FOREIGN KEY
			(amp_gpi_ni_indicator_id)
			REFERENCES amp_gpi_ni_indicator (amp_gpi_ni_indicator_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION
			)
			WITH (
			OIDS=FALSE
			);
			ALTER TABLE amp_gpi_ni_question
			OWNER TO amp;


			-- Sequence: amp_gpi_ni_question_option_seq

			CREATE SEQUENCE amp_gpi_ni_question_option_seq
			INCREMENT 1
			MINVALUE 1
			MAXVALUE 9223372036854775807
			START 1
			CACHE 1;
			ALTER TABLE amp_gpi_ni_question_option_seq
			OWNER TO amp;


			-- Table: amp_gpi_ni_question_option


			CREATE TABLE IF NOT EXISTS amp_gpi_ni_question_option
			(
			amp_gpi_ni_question_option_id bigint NOT NULL,
			amp_gpi_ni_question_id bigint,
			code character varying(255),
			description character varying(500),
			CONSTRAINT amp_gpi_ni_question_option_pkey PRIMARY KEY
			(amp_gpi_ni_question_option_id),
			CONSTRAINT amp_gpi_ni_question_fkey FOREIGN KEY (amp_gpi_ni_question_id)
			REFERENCES amp_gpi_ni_question (amp_gpi_ni_question_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION
			)
			WITH (
			OIDS=FALSE
			);
			ALTER TABLE amp_gpi_ni_question_option
			OWNER TO amp;


			-- Sequence: "amp_gpi_ni_survey_seq﻿"

			CREATE SEQUENCE "amp_gpi_ni_survey_seq﻿"
			INCREMENT 1
			MINVALUE 1
			MAXVALUE 9223372036854775807
			START 1
			CACHE 1;
			ALTER TABLE "amp_gpi_ni_survey_seq﻿"
			OWNER TO amp;

			-- Table: amp_gpi_ni_survey

			CREATE TABLE IF NOT EXISTS amp_gpi_ni_survey
			(
			amp_gpi_ni_survey_id bigint NOT NULL,
			survey_date timestamp without time zone,
			amp_activity_id bigint,
			CONSTRAINT amp_gpi_ni_survey_pkey PRIMARY KEY (amp_gpi_ni_survey_id),
			CONSTRAINT amp_activity_id_fkey FOREIGN KEY (amp_activity_id)
			REFERENCES amp_activity_version (amp_activity_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION
			)
			WITH (
			OIDS=FALSE
			);
			ALTER TABLE amp_gpi_ni_survey
			OWNER TO amp;

			-- Index: amp_gpi_ni_survey_activity_id_index

			CREATE INDEX amp_gpi_ni_survey_activity_id_index
			ON amp_gpi_ni_survey
			USING btree
			(amp_activity_id);

			-- Sequence: amp_gpi_ni_survey_response_seq

			CREATE SEQUENCE amp_gpi_ni_survey_response_seq
			INCREMENT 1
			MINVALUE 1
			MAXVALUE 9223372036854775807
			START 1
			CACHE 1;
			ALTER TABLE amp_gpi_ni_survey_response_seq
			OWNER TO amp;

			-- Table: amp_gpi_ni_survey_response


			CREATE TABLE IF NOT EXISTS amp_gpi_ni_survey_response
			(
			amp_gpi_ni_survey_response_id bigint NOT NULL,
			amp_gpi_ni_survey_id bigint,
			amp_gpi_ni_question_id bigint,
			value_integer bigint,
			value_text text,
			value_question_option_id bigint,
			value_resource_uuid character varying(255),
			CONSTRAINT amp_gpi_ni_survey_response_id_pkey PRIMARY KEY
			(amp_gpi_ni_survey_response_id),
			CONSTRAINT amp_gpi_ni_question_id_fkey FOREIGN KEY (amp_gpi_ni_question_id)
			REFERENCES amp_gpi_ni_question (amp_gpi_ni_question_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION,
			CONSTRAINT amp_gpi_ni_survey_id_fkey FOREIGN KEY (amp_gpi_ni_survey_id)
			REFERENCES amp_gpi_ni_survey (amp_gpi_ni_survey_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION,
			CONSTRAINT value_question_option_id_fkey FOREIGN KEY (value_question_option_id)
			REFERENCES amp_gpi_ni_question_option (amp_gpi_ni_question_option_id)
			MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION
			)
			WITH (
			OIDS=FALSE
			);
			ALTER TABLE amp_gpi_ni_survey_response
			OWNER TO amp;

			-- Index: survey_response_gpi_ni_survey_id_index

			CREATE INDEX survey_response_gpi_ni_survey_id_index
			ON amp_gpi_ni_survey_response
			USING btree
			(amp_gpi_ni_survey_id);


			-- Sequence: "amp_gpi_ni_aid_on_budget_seq﻿"

			CREATE SEQUENCE "amp_gpi_ni_aid_on_budget_seq﻿"
			INCREMENT 1
			MINVALUE 1
			MAXVALUE 9223372036854775807
			START 1
			CACHE 1;
			ALTER TABLE "amp_gpi_ni_aid_on_budget_seq﻿"
			OWNER TO amp;

			-- Table: amp_gpi_ni_aid_on_budget

			CREATE TABLE IF NOT EXISTS amp_gpi_ni_aid_on_budget
			(
			amp_gpi_ni_aid_on_budget_id bigint NOT NULL,
			amount double precision,
			currency_id bigint,
			donor_id bigint,
			date timestamp without time zone,
			CONSTRAINT amp_gpi_ni_aid_on_budget_id_pkey PRIMARY KEY
			(amp_gpi_ni_aid_on_budget_id),
			CONSTRAINT amp_gpi_ni_aid_on_budget_currency_id_fkey FOREIGN KEY (currency_id)
			REFERENCES amp_currency (amp_currency_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION,
			CONSTRAINT amp_gpi_ni_aid_on_budget_donor_id_fkey FOREIGN KEY (donor_id)
			REFERENCES amp_organisation (amp_org_id) MATCH SIMPLE
			ON UPDATE NO ACTION ON DELETE NO ACTION
			)
			WITH (
			OIDS=FALSE
			);
			ALTER TABLE amp_gpi_ni_aid_on_budget
			OWNER TO amp;


		</lang>
	</script>
	</apply>
</tns:patch>