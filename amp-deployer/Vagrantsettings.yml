---
# Default vagrant settings file.
#
# You can copy this file to "Vagrantsettings.local.yml" and configure it.
#
# For more information:
# @see https://github.com/devgateway/happy-deployer
#

# Used to name the VM and set hostname for the GUEST (only if vagrant.hosts_entry is 1).
# TODO: Use `project_environment` to botstrap instances?!?
project_shortname: amp212
project_environment: local

# Vagrant VM only settings.
#  - hostonlyip: should be unique IP among your virtual machines.
#  - hosts_entry: determines if the GUEST hostname is add added to the HOST /etc/hosts file.
vagrant:
  hostonlyip: 10.10.10.212
  hosts_entry: 0

# Define mount points for the VM.
vagrant_volumes:
  - source: ../amp-cms
    target: /var/www/amp212-cms-local
  - source: ../amp
    target: /opt/devgateway/amp212-local

# Information about the box.
vagrant_box:
  name: sl7201607
  url: http://www.example.org/scientific-7-201607.box
  download_checksum: 7bfe7ba403eeeb20d57fdd1c8b400e10
  download_checksum_type: md5

# Ansible variables to override.
common__deployer_user: vagrant
common__deployer_group: vagrant
httpd__User: vagrant
httpd__Group: vagrant
httpd__User_vhosts: vagrant
httpd__Group_vhosts: vagrant

# Define forwarded ports.
vagrant_mapped_ports:
  - source: 5432
    target: 5432
  - source: 8009
    target: 8009

# PostgreSQL Client Authentication Configuration
# @see: https://www.postgresql.org/docs/9.5/static/client-authentication.html
postgresql__listen_addresses: '0.0.0.0'
postgresql__client_authentication_extras:
  - comment: 'Use password auth on IPv4 local connections:'
    type: host
    database: yali
    user: yali
    address: '10.0.2.2/1'
    method: md5
